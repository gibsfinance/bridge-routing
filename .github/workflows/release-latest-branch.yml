name: Release Latest

on:
  push:
    branches:
      - staging
      - master

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          cache: yarn
          node-version: '22.12.x'
      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.10.3
        env:
          YARN_VERSION: 4.10.3
      - name: Install dependencies
        run: yarn
        env:
          NPM_TOKEN: '${{ secrets.NPM_TOKEN }}'
      - name: Build project
        run: yarn run build
        env:
          PUBLIC_NODE_ENV: 'production'
          PUBLIC_IMAGE_ROOT: 'https://gib.show'
          PUBLIC_WALLET_CONNECT_ID: '1f8a963aa1809cada8560d560360107d'
          NODE_ENV: 'production'
          NPM_TOKEN: '${{ secrets.NPM_TOKEN }}'
      - name: Copy info
        run: cp packages/ui/package.json packages/ui/dist/version.json
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'ui-dist-${{github.sha}}'
          overwrite: true
          path: packages/ui/dist/
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'bridge-sdk-dist-${{github.sha}}'
          overwrite: true
          path: packages/bridge-sdk/dist/
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'common-dist-${{github.sha}}'
          overwrite: true
          path: packages/common/dist/
  release-pinata:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          cache: yarn
          node-version: '22.12.x'
      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.10.3
        env:
          YARN_VERSION: 4.10.3
      - run: yarn
        env:
          NPM_TOKEN: '${{ secrets.NPM_TOKEN }}'
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'ui-dist-${{github.sha}}'
          path: packages/ui/dist/
      - name: Upload build to Pinata
        run: npm run pinata:publish
        env:
          NODE_ENV: 'production'
          PINATA_API_KEY: '${{ secrets.PINATA_API_KEY }}'
  publish-github:
    permissions: write-all
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          cache: yarn
          node-version: '22.12.x'
      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.10.3
        env:
          YARN_VERSION: 4.10.3
          NPM_TOKEN: '${{ secrets.NPM_TOKEN }}'
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'ui-dist-${{github.sha}}'
          path: packages/ui/dist/
      - name: Read version from package.json
        id: get_version
        run: echo "VERSION=$(node -p 'require(`./packages/ui/package.json`).version')" >> $GITHUB_ENV
      - name: Create tag
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git tag -a v$VERSION -m "Release v$VERSION"
          git push origin v$VERSION
  publish-npm:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5
        with:
          cache: yarn
          node-version: '22.12.x'
      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.10.3
        env:
          YARN_VERSION: 4.10.3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'common-dist-${{github.sha}}'
          path: packages/common/dist/
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'bridge-sdk-dist-${{github.sha}}'
          path: packages/bridge-sdk/dist/
      - uses: JS-DevTools/npm-publish@v3
        with:
          package: packages/common
          token: ${{ secrets.NPM_TOKEN }}
      - uses: JS-DevTools/npm-publish@v3
        with:
          package: packages/bridge-sdk
          token: ${{ secrets.NPM_TOKEN }}
